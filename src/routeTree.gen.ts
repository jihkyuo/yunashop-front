/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as OrdersIndexImport } from './routes/orders/index'
import { Route as MembersIndexImport } from './routes/members/index'
import { Route as ItemsIndexImport } from './routes/items/index'
import { Route as OrdersNewImport } from './routes/orders/new'
import { Route as MembersNewImport } from './routes/members/new'
import { Route as ItemsNewImport } from './routes/items/new'
import { Route as ItemsItemIdEditImport } from './routes/items/$itemId/edit'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersIndexRoute = OrdersIndexImport.update({
  id: '/orders/',
  path: '/orders/',
  getParentRoute: () => rootRoute,
} as any)

const MembersIndexRoute = MembersIndexImport.update({
  id: '/members/',
  path: '/members/',
  getParentRoute: () => rootRoute,
} as any)

const ItemsIndexRoute = ItemsIndexImport.update({
  id: '/items/',
  path: '/items/',
  getParentRoute: () => rootRoute,
} as any)

const OrdersNewRoute = OrdersNewImport.update({
  id: '/orders/new',
  path: '/orders/new',
  getParentRoute: () => rootRoute,
} as any)

const MembersNewRoute = MembersNewImport.update({
  id: '/members/new',
  path: '/members/new',
  getParentRoute: () => rootRoute,
} as any)

const ItemsNewRoute = ItemsNewImport.update({
  id: '/items/new',
  path: '/items/new',
  getParentRoute: () => rootRoute,
} as any)

const ItemsItemIdEditRoute = ItemsItemIdEditImport.update({
  id: '/items/$itemId/edit',
  path: '/items/$itemId/edit',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/items/new': {
      id: '/items/new'
      path: '/items/new'
      fullPath: '/items/new'
      preLoaderRoute: typeof ItemsNewImport
      parentRoute: typeof rootRoute
    }
    '/members/new': {
      id: '/members/new'
      path: '/members/new'
      fullPath: '/members/new'
      preLoaderRoute: typeof MembersNewImport
      parentRoute: typeof rootRoute
    }
    '/orders/new': {
      id: '/orders/new'
      path: '/orders/new'
      fullPath: '/orders/new'
      preLoaderRoute: typeof OrdersNewImport
      parentRoute: typeof rootRoute
    }
    '/items/': {
      id: '/items/'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof ItemsIndexImport
      parentRoute: typeof rootRoute
    }
    '/members/': {
      id: '/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof MembersIndexImport
      parentRoute: typeof rootRoute
    }
    '/orders/': {
      id: '/orders/'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersIndexImport
      parentRoute: typeof rootRoute
    }
    '/items/$itemId/edit': {
      id: '/items/$itemId/edit'
      path: '/items/$itemId/edit'
      fullPath: '/items/$itemId/edit'
      preLoaderRoute: typeof ItemsItemIdEditImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/items/new': typeof ItemsNewRoute
  '/members/new': typeof MembersNewRoute
  '/orders/new': typeof OrdersNewRoute
  '/items': typeof ItemsIndexRoute
  '/members': typeof MembersIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/items/$itemId/edit': typeof ItemsItemIdEditRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/items/new': typeof ItemsNewRoute
  '/members/new': typeof MembersNewRoute
  '/orders/new': typeof OrdersNewRoute
  '/items': typeof ItemsIndexRoute
  '/members': typeof MembersIndexRoute
  '/orders': typeof OrdersIndexRoute
  '/items/$itemId/edit': typeof ItemsItemIdEditRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/items/new': typeof ItemsNewRoute
  '/members/new': typeof MembersNewRoute
  '/orders/new': typeof OrdersNewRoute
  '/items/': typeof ItemsIndexRoute
  '/members/': typeof MembersIndexRoute
  '/orders/': typeof OrdersIndexRoute
  '/items/$itemId/edit': typeof ItemsItemIdEditRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/items/new'
    | '/members/new'
    | '/orders/new'
    | '/items'
    | '/members'
    | '/orders'
    | '/items/$itemId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/items/new'
    | '/members/new'
    | '/orders/new'
    | '/items'
    | '/members'
    | '/orders'
    | '/items/$itemId/edit'
  id:
    | '__root__'
    | '/'
    | '/items/new'
    | '/members/new'
    | '/orders/new'
    | '/items/'
    | '/members/'
    | '/orders/'
    | '/items/$itemId/edit'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ItemsNewRoute: typeof ItemsNewRoute
  MembersNewRoute: typeof MembersNewRoute
  OrdersNewRoute: typeof OrdersNewRoute
  ItemsIndexRoute: typeof ItemsIndexRoute
  MembersIndexRoute: typeof MembersIndexRoute
  OrdersIndexRoute: typeof OrdersIndexRoute
  ItemsItemIdEditRoute: typeof ItemsItemIdEditRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ItemsNewRoute: ItemsNewRoute,
  MembersNewRoute: MembersNewRoute,
  OrdersNewRoute: OrdersNewRoute,
  ItemsIndexRoute: ItemsIndexRoute,
  MembersIndexRoute: MembersIndexRoute,
  OrdersIndexRoute: OrdersIndexRoute,
  ItemsItemIdEditRoute: ItemsItemIdEditRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/items/new",
        "/members/new",
        "/orders/new",
        "/items/",
        "/members/",
        "/orders/",
        "/items/$itemId/edit"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/items/new": {
      "filePath": "items/new.tsx"
    },
    "/members/new": {
      "filePath": "members/new.tsx"
    },
    "/orders/new": {
      "filePath": "orders/new.tsx"
    },
    "/items/": {
      "filePath": "items/index.tsx"
    },
    "/members/": {
      "filePath": "members/index.tsx"
    },
    "/orders/": {
      "filePath": "orders/index.tsx"
    },
    "/items/$itemId/edit": {
      "filePath": "items/$itemId/edit.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
